"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserForm2 = exports.AddressForm = exports.SomeClass = void 0;
const Required_1 = __importDefault(require("../validators/any/Required"));
const Rule_1 = __importDefault(require("../validators/any/Rule"));
const Truthy_1 = __importDefault(require("../validators/any/Truthy"));
const valid_1 = require("../validators/any/valid");
const index_1 = __importDefault(require("../validators/index"));
const ExactLength_1 = __importDefault(require("../validators/string/ExactLength"));
const MaxLength_1 = __importDefault(require("../validators/string/MaxLength"));
const MinLength_1 = __importDefault(require("../validators/string/MinLength"));
const Password_1 = __importDefault(require("../validators/string/Password"));
const Email_1 = __importDefault(require("../validators/string/regex/impl/Email"));
const Locale_1 = require("./messages/model/Locale");
const EntityProcessor_1 = __importDefault(require("./model/processor/EntityProcessor"));
const decorator_utils_1 = require("./utils/decorator.utils");
(0, Locale_1.setLocale)("en");
class SomeClass {
}
exports.SomeClass = SomeClass;
// prettier-ignore
function ExactCharCount(props) {
    const key = "ExactCharCount";
    const charCount = typeof props === "number" ? props : props.value;
    const defaultMessage = `Text must have exactly ${charCount} characters`;
    return (0, Rule_1.default)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (v) => ({
            key,
            message: (0, decorator_utils_1.extractMessage)(props, defaultMessage),
            valid: (v === null || v === void 0 ? void 0 : v.length) === charCount,
        }),
    });
}
let AddressForm = (() => {
    var _a;
    let _instanceExtraInitializers = [];
    let _country_decorators;
    let _country_initializers = [];
    return _a = class AddressForm {
            constructor() {
                this.country = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _country_initializers, void 0));
            }
        },
        (() => {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _country_decorators = [(0, ExactLength_1.default)(2), (0, Required_1.default)(), ExactCharCount(10)];
            __esDecorate(null, null, _country_decorators, { kind: "field", name: "country", static: false, private: false, access: { has: obj => "country" in obj, get: obj => obj.country, set: (obj, value) => { obj.country = value; } }, metadata: _metadata }, _country_initializers, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
})();
exports.AddressForm = AddressForm;
let UserForm2 = (() => {
    var _a;
    let _instanceExtraInitializers = [];
    let _firstName_decorators;
    let _firstName_initializers = [];
    let _lastName_decorators;
    let _lastName_initializers = [];
    let _password_decorators;
    let _password_initializers = [];
    let _email_decorators;
    let _email_initializers = [];
    let _addressForm_decorators;
    let _addressForm_initializers = [];
    let _get_passwordsMatch_decorators;
    return _a = class UserForm2 {
            constructor() {
                this.firstName = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _firstName_initializers, void 0));
                this.lastName = __runInitializers(this, _lastName_initializers, void 0);
                this.password = __runInitializers(this, _password_initializers, void 0);
                this.email = __runInitializers(this, _email_initializers, void 0);
                this.addressForm = __runInitializers(this, _addressForm_initializers, void 0);
            }
            get passwordsMatch() {
                return false;
            }
        },
        (() => {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _firstName_decorators = [(0, MinLength_1.default)(5), (0, MaxLength_1.default)(10), (0, Required_1.default)()];
            _lastName_decorators = [(0, MinLength_1.default)(5), (0, MaxLength_1.default)(10), (0, Required_1.default)()];
            _password_decorators = [(0, Password_1.default)(), (0, Required_1.default)()];
            _email_decorators = [(0, Email_1.default)(), (0, Required_1.default)()];
            _addressForm_decorators = [(0, valid_1.valid)(AddressForm)];
            _get_passwordsMatch_decorators = [(0, Truthy_1.default)()];
            __esDecorate(_a, null, _get_passwordsMatch_decorators, { kind: "getter", name: "passwordsMatch", static: false, private: false, access: { has: obj => "passwordsMatch" in obj, get: obj => obj.passwordsMatch }, metadata: _metadata }, null, _instanceExtraInitializers);
            __esDecorate(null, null, _firstName_decorators, { kind: "field", name: "firstName", static: false, private: false, access: { has: obj => "firstName" in obj, get: obj => obj.firstName, set: (obj, value) => { obj.firstName = value; } }, metadata: _metadata }, _firstName_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _lastName_decorators, { kind: "field", name: "lastName", static: false, private: false, access: { has: obj => "lastName" in obj, get: obj => obj.lastName, set: (obj, value) => { obj.lastName = value; } }, metadata: _metadata }, _lastName_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _password_decorators, { kind: "field", name: "password", static: false, private: false, access: { has: obj => "password" in obj, get: obj => obj.password, set: (obj, value) => { obj.password = value; } }, metadata: _metadata }, _password_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _email_decorators, { kind: "field", name: "email", static: false, private: false, access: { has: obj => "email" in obj, get: obj => obj.email, set: (obj, value) => { obj.email = value; } }, metadata: _metadata }, _email_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _addressForm_decorators, { kind: "field", name: "addressForm", static: false, private: false, access: { has: obj => "addressForm" in obj, get: obj => obj.addressForm, set: (obj, value) => { obj.addressForm = value; } }, metadata: _metadata }, _addressForm_initializers, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
})();
exports.UserForm2 = UserForm2;
let UserForm = (() => {
    var _a;
    let _instanceExtraInitializers = [];
    let _firstName_decorators;
    let _firstName_initializers = [];
    let _lastName_decorators;
    let _lastName_initializers = [];
    let _password_decorators;
    let _password_initializers = [];
    let _url_decorators;
    let _url_initializers = [];
    let _age_decorators;
    let _age_initializers = [];
    let _get_passwordsMatch_decorators;
    return _a = class UserForm {
            constructor() {
                this.firstName = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _firstName_initializers, void 0));
                this.lastName = __runInitializers(this, _lastName_initializers, void 0);
                this.password = __runInitializers(this, _password_initializers, void 0);
                this.url = __runInitializers(this, _url_initializers, void 0);
                this.age = __runInitializers(this, _age_initializers, void 0);
            }
            get passwordsMatch() {
                return this.password === this.confirmPassword;
            }
        },
        (() => {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _firstName_decorators = [index_1.default.string.MinLength(5), index_1.default.string.Required()];
            _lastName_decorators = [index_1.default.string.Required()];
            _password_decorators = [index_1.default.string.Required(), index_1.default.string.Password()];
            _url_decorators = [index_1.default.string.URL()];
            _age_decorators = [index_1.default.number.ValueRange({ min: 18, max: 100 })];
            _get_passwordsMatch_decorators = [index_1.default.boolean.Truthy("Passwords must match")];
            __esDecorate(_a, null, _get_passwordsMatch_decorators, { kind: "getter", name: "passwordsMatch", static: false, private: false, access: { has: obj => "passwordsMatch" in obj, get: obj => obj.passwordsMatch }, metadata: _metadata }, null, _instanceExtraInitializers);
            __esDecorate(null, null, _firstName_decorators, { kind: "field", name: "firstName", static: false, private: false, access: { has: obj => "firstName" in obj, get: obj => obj.firstName, set: (obj, value) => { obj.firstName = value; } }, metadata: _metadata }, _firstName_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _lastName_decorators, { kind: "field", name: "lastName", static: false, private: false, access: { has: obj => "lastName" in obj, get: obj => obj.lastName, set: (obj, value) => { obj.lastName = value; } }, metadata: _metadata }, _lastName_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _password_decorators, { kind: "field", name: "password", static: false, private: false, access: { has: obj => "password" in obj, get: obj => obj.password, set: (obj, value) => { obj.password = value; } }, metadata: _metadata }, _password_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _url_decorators, { kind: "field", name: "url", static: false, private: false, access: { has: obj => "url" in obj, get: obj => obj.url, set: (obj, value) => { obj.url = value; } }, metadata: _metadata }, _url_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _age_decorators, { kind: "field", name: "age", static: false, private: false, access: { has: obj => "age" in obj, get: obj => obj.age, set: (obj, value) => { obj.age = value; } }, metadata: _metadata }, _age_initializers, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
})();
exports.default = UserForm;
const dummy = {
    firstName: "",
    lastName: "",
    password: "12345",
    confirmPassword: "",
    url: "",
    age: 10,
};
function main() {
    const processor = new EntityProcessor_1.default(UserForm);
    const { errors } = processor.validate(dummy);
    console.log(JSON.stringify(errors, null, 2));
}
main();
//    ^?
