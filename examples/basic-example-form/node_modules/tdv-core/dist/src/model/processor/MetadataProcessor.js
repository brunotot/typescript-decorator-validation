"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _MetadataProcessor_data, _MetadataProcessor_buildProcessor;
Object.defineProperty(exports, "__esModule", { value: true });
const ValidationProcessor_1 = __importDefault(require("./ValidationProcessor"));
const META_KEY = "tdv:metadata-processor";
class MetadataProcessor {
    get data() {
        return __classPrivateFieldGet(this, _MetadataProcessor_data, "f");
    }
    constructor() {
        _MetadataProcessor_data.set(this, void 0);
        __classPrivateFieldSet(this, _MetadataProcessor_data, new Map(), "f");
    }
    getValidationProcessor(key) {
        const validate = this.getOrDefault(key, () => new ValidationProcessor_1.default());
        this.set(key, validate);
        return validate;
    }
    getOrDefault(key, defaultValueSupplier) {
        return __classPrivateFieldGet(this, _MetadataProcessor_data, "f").has(key)
            ? __classPrivateFieldGet(this, _MetadataProcessor_data, "f").get(key)
            : this.set(key, defaultValueSupplier());
    }
    get(key) {
        return __classPrivateFieldGet(this, _MetadataProcessor_data, "f").get(key);
    }
    set(key, value) {
        __classPrivateFieldGet(this, _MetadataProcessor_data, "f").set(key, value);
        return value;
    }
    read() {
        console.log(__classPrivateFieldGet(this, _MetadataProcessor_data, "f"));
    }
    static fromContext(context) {
        return __classPrivateFieldGet(_a, _a, "m", _MetadataProcessor_buildProcessor).call(_a, context.metadata);
    }
    static fromClass(clazz) {
        var _b;
        var _c;
        // @ts-ignore
        (_b = clazz[_c = Symbol.metadata]) !== null && _b !== void 0 ? _b : (clazz[_c] = {});
        // @ts-ignore
        return __classPrivateFieldGet(_a, _a, "m", _MetadataProcessor_buildProcessor).call(_a, clazz[Symbol.metadata]);
    }
}
_a = MetadataProcessor, _MetadataProcessor_data = new WeakMap(), _MetadataProcessor_buildProcessor = function _MetadataProcessor_buildProcessor(meta) {
    if (META_KEY in meta && meta[META_KEY] instanceof _a) {
        return meta[META_KEY];
    }
    const processor = new _a();
    meta[META_KEY] = processor;
    return processor;
};
exports.default = MetadataProcessor;
