import { MessageFn } from "../message.factory";
type ErrorMessageGenerator = {
    Alpha: MessageFn;
    Alphanumeric: MessageFn;
    ArrayContains: MessageFn<[any]>;
    ArrayEmpty: MessageFn;
    ArraySizeExact: MessageFn<[number, number]>;
    ArraySizeMax: MessageFn<[number, number]>;
    ArraySizeMin: MessageFn<[number, number]>;
    ArraySizeRange: MessageFn<[number, number, number]>;
    ArrayUnique: MessageFn;
    Date: MessageFn<[string]>;
    Decimal: MessageFn<[number]>;
    Digits: MessageFn<[number, number]>;
    Email: MessageFn;
    ExactLength: MessageFn<[number]>;
    Falsy: MessageFn;
    FutureDate: MessageFn<[Date]>;
    IPAddress: MessageFn;
    Integer: MessageFn<[number]>;
    InvalidDigits: MessageFn<[number, number]>;
    JSON: MessageFn;
    MaxLength: MessageFn<[number]>;
    MinLength: MessageFn<[number]>;
    Negative: MessageFn<[number]>;
    NonNegative: MessageFn<[number]>;
    NonPositive: MessageFn<[number]>;
    Numeric: MessageFn;
    PasswordLength: MessageFn<[number]>;
    PasswordLowercase: MessageFn;
    PasswordNumbers: MessageFn;
    PasswordSpecials: MessageFn;
    PasswordUppercase: MessageFn;
    PastDate: MessageFn<[Date]>;
    Positive: MessageFn<[number]>;
    RangeLength: MessageFn<[number, number]>;
    Required: MessageFn;
    Time: MessageFn<[string, boolean]>;
    TodayDate: MessageFn<[Date]>;
    Truthy: MessageFn;
    URL: MessageFn;
    ValueMax: MessageFn<[number, number]>;
    ValueMin: MessageFn<[number, number]>;
    ValueRange: MessageFn<[number, number, number]>;
    XML: MessageFn;
    Uppercase: MessageFn;
    Lowercase: MessageFn;
};
declare const ErrorMessage: ErrorMessageGenerator;
export default ErrorMessage;
