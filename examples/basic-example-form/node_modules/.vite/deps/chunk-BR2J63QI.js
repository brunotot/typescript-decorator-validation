import {
  __commonJS
} from "./chunk-76J2PTFD.js";

// node_modules/tdv-core/dist/src/model/processor/ValidationProcessor.js
var require_ValidationProcessor = __commonJS({
  "node_modules/tdv-core/dist/src/model/processor/ValidationProcessor.js"(exports) {
    "use strict";
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f) {
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    };
    var _ValidationProcessor_isInitialTypeGroup;
    var _ValidationProcessor_typeGroup;
    Object.defineProperty(exports, "__esModule", { value: true });
    var ValidationProcessor = class {
      constructor() {
        this.node = [];
        this.children = [];
        _ValidationProcessor_isInitialTypeGroup.set(this, true);
        _ValidationProcessor_typeGroup.set(this, "PRIMITIVE");
      }
      get isInitialTypeGroup() {
        return __classPrivateFieldGet(this, _ValidationProcessor_isInitialTypeGroup, "f");
      }
      get typeGroup() {
        return __classPrivateFieldGet(this, _ValidationProcessor_typeGroup, "f");
      }
      set typeGroup(typeGroup) {
        __classPrivateFieldSet(this, _ValidationProcessor_isInitialTypeGroup, false, "f");
        __classPrivateFieldSet(this, _ValidationProcessor_typeGroup, typeGroup, "f");
      }
      appendNode(validator) {
        this.node.push(validator);
      }
      appendChild(validator) {
        this.children.push(validator);
      }
    };
    _ValidationProcessor_isInitialTypeGroup = /* @__PURE__ */ new WeakMap(), _ValidationProcessor_typeGroup = /* @__PURE__ */ new WeakMap();
    exports.default = ValidationProcessor;
  }
});

// node_modules/tdv-core/dist/src/model/processor/MetadataProcessor.js
var require_MetadataProcessor = __commonJS({
  "node_modules/tdv-core/dist/src/model/processor/MetadataProcessor.js"(exports) {
    "use strict";
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f) {
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    var _a;
    var _MetadataProcessor_data;
    var _MetadataProcessor_buildProcessor;
    Object.defineProperty(exports, "__esModule", { value: true });
    var ValidationProcessor_1 = __importDefault(require_ValidationProcessor());
    var META_KEY = "tdv:metadata-processor";
    var MetadataProcessor = class {
      get data() {
        return __classPrivateFieldGet(this, _MetadataProcessor_data, "f");
      }
      constructor() {
        _MetadataProcessor_data.set(this, void 0);
        __classPrivateFieldSet(this, _MetadataProcessor_data, /* @__PURE__ */ new Map(), "f");
      }
      getValidationProcessor(key) {
        const validate = this.getOrDefault(key, () => new ValidationProcessor_1.default());
        this.set(key, validate);
        return validate;
      }
      getOrDefault(key, defaultValueSupplier) {
        return __classPrivateFieldGet(this, _MetadataProcessor_data, "f").has(key) ? __classPrivateFieldGet(this, _MetadataProcessor_data, "f").get(key) : this.set(key, defaultValueSupplier());
      }
      get(key) {
        return __classPrivateFieldGet(this, _MetadataProcessor_data, "f").get(key);
      }
      set(key, value) {
        __classPrivateFieldGet(this, _MetadataProcessor_data, "f").set(key, value);
        return value;
      }
      read() {
        console.log(__classPrivateFieldGet(this, _MetadataProcessor_data, "f"));
      }
      static fromContext(context) {
        return __classPrivateFieldGet(_a, _a, "m", _MetadataProcessor_buildProcessor).call(_a, context.metadata);
      }
      static fromClass(clazz) {
        var _b;
        var _c;
        (_b = clazz[_c = Symbol.metadata]) !== null && _b !== void 0 ? _b : clazz[_c] = {};
        return __classPrivateFieldGet(_a, _a, "m", _MetadataProcessor_buildProcessor).call(_a, clazz[Symbol.metadata]);
      }
    };
    _a = MetadataProcessor, _MetadataProcessor_data = /* @__PURE__ */ new WeakMap(), _MetadataProcessor_buildProcessor = function _MetadataProcessor_buildProcessor2(meta) {
      if (META_KEY in meta && meta[META_KEY] instanceof _a) {
        return meta[META_KEY];
      }
      const processor = new _a();
      meta[META_KEY] = processor;
      return processor;
    };
    exports.default = MetadataProcessor;
  }
});

// node_modules/tdv-core/dist/src/decorators/decorator.factory.js
var require_decorator_factory = __commonJS({
  "node_modules/tdv-core/dist/src/decorators/decorator.factory.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeDecorator = void 0;
    var MetadataProcessor_1 = __importDefault(require_MetadataProcessor());
    function isDecoratorsStage2(context) {
      return typeof context === "string";
    }
    function makeDecoratorUsingStage2Strategy(target, context, decoratorSupplier) {
      const name = context;
      const clazz = target.constructor;
      const processor = MetadataProcessor_1.default.fromClass(clazz);
      decoratorSupplier(name, processor, {
        name,
        metadata: {}
      });
    }
    function makeDecorator(decoratorSupplier) {
      return function(target, context) {
        if (isDecoratorsStage2(context)) {
          return makeDecoratorUsingStage2Strategy(target, context, decoratorSupplier);
        }
        const name = context.name;
        const metadataProcessor = MetadataProcessor_1.default.fromContext(context);
        decoratorSupplier(name, metadataProcessor, context);
      };
    }
    exports.makeDecorator = makeDecorator;
  }
});

// node_modules/tdv-core/dist/src/decorators/facade/validator.facade.js
var require_validator_facade = __commonJS({
  "node_modules/tdv-core/dist/src/decorators/facade/validator.facade.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeValidator = void 0;
    var decorator_factory_1 = require_decorator_factory();
    function makeValidator(builder) {
      return (0, decorator_factory_1.makeDecorator)((key, processor) => {
        saveMetadata(processor, key, builder.groups, builder.isValid);
      });
    }
    exports.makeValidator = makeValidator;
    function getSanitizedGroups(unsanitizedGroups) {
      return Array.isArray(unsanitizedGroups) ? unsanitizedGroups : unsanitizedGroups !== void 0 ? [unsanitizedGroups] : [];
    }
    function saveMetadata(processor, key, groups, isValid) {
      const validate = processor.getValidationProcessor(key);
      validate.appendNode({
        groups: getSanitizedGroups(groups),
        validate: isValid
      });
    }
  }
});

// node_modules/tdv-core/dist/src/messages/model/Locale.js
var require_Locale = __commonJS({
  "node_modules/tdv-core/dist/src/messages/model/Locale.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setLocale = exports.getLocale = void 0;
    var locale = "en";
    function getLocale() {
      return locale;
    }
    exports.getLocale = getLocale;
    function setLocale(localeValue) {
      locale = localeValue;
    }
    exports.setLocale = setLocale;
  }
});

// node_modules/tdv-core/dist/src/utils/class.utils.js
var require_class_utils = __commonJS({
  "node_modules/tdv-core/dist/src/utils/class.utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getClassFieldNames = void 0;
    function getClassFieldNames(constructor) {
      const instance = new constructor();
      return [
        ...getPropertyNames(instance),
        ...getPropertyNames(instance.__proto__)
      ];
    }
    exports.getClassFieldNames = getClassFieldNames;
    function getPropertyNames(object) {
      return Object.getOwnPropertyNames(object).filter((property) => property !== "constructor");
    }
  }
});

// node_modules/tdv-core/dist/src/utils/object.utils.js
var require_object_utils = __commonJS({
  "node_modules/tdv-core/dist/src/utils/object.utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hash = exports.deepEquals = exports.hasValue = exports.hasErrors = exports.safeSetter = void 0;
    function hasSetter(parent, key) {
      const descriptor = Object.getOwnPropertyDescriptor(parent, key);
      return !!descriptor && (descriptor.writable || typeof descriptor.set === "function");
    }
    function safeSetter(parent, key) {
      return (value) => {
        if (hasSetter(parent, key)) {
          parent[key] = typeof value === "function" ? value() : value;
        }
      };
    }
    exports.safeSetter = safeSetter;
    function hasErrors(data) {
      const data0 = data;
      if (Array.isArray(data0)) {
        return data0.some((item) => hasErrors(item));
      } else if (typeof data0 === "object" && data0 !== null) {
        return Object.values(data0).some((value) => hasErrors(value));
      } else if (typeof data0 === "string") {
        return true;
      }
      return false;
    }
    exports.hasErrors = hasErrors;
    function hasValue(obj) {
      return !(obj === void 0 || obj === null || obj === false || Array.isArray(obj) && obj.length === 0 || typeof obj === "string" && obj.trim().length === 0 || obj instanceof Date && obj.toString() === "Invalid Date");
    }
    exports.hasValue = hasValue;
    function deepEquals(val1, val2) {
      if (val1 === val2) {
        return true;
      } else if (typeof val1 !== typeof val2) {
        return false;
      } else if (Array.isArray(val1) && Array.isArray(val2)) {
        if (val1.length !== val2.length) {
          return false;
        }
        for (let i = 0; i < val1.length; i++) {
          if (!deepEquals(val1[i], val2[i])) {
            return false;
          }
        }
        return true;
      } else if (typeof val1 === "object" && val1 !== null && val2 !== null) {
        const keys1 = Object.keys(val1);
        const keys2 = Object.keys(val2);
        if (keys1.length !== keys2.length) {
          return false;
        }
        for (const key of keys1) {
          if (!deepEquals(val1[key], val2[key])) {
            return false;
          }
        }
        return true;
      } else {
        return false;
      }
    }
    exports.deepEquals = deepEquals;
    function hash(val) {
      function stringHash(str) {
        let hash2 = 0;
        for (let i = 0; i < str.length; i++) {
          hash2 = (hash2 << 5) - hash2 + str.charCodeAt(i);
          hash2 = hash2 & hash2;
        }
        return hash2;
      }
      function numberHash(num) {
        return num.toString().split("").reduce((hash2, ch) => {
          hash2 = (hash2 << 5) - hash2 + ch.charCodeAt(0);
          return hash2 & hash2;
        }, 0);
      }
      function booleanHash(bool) {
        return bool ? 1 : 0;
      }
      function nullHash() {
        return 0;
      }
      function undefinedHash() {
        return 0;
      }
      function arrayHash(arr) {
        return arr.reduce((hash2, val2) => {
          hash2 = (hash2 << 5) - hash2 + hash2(val2);
          return hash2 & hash2;
        }, 0);
      }
      function objectHash(obj) {
        return Object.keys(obj).sort().reduce((hashValue, key) => {
          hashValue = (hashValue << 5) - hashValue + hash(obj[key]);
          return hashValue & hashValue;
        }, 0);
      }
      function defaultHash(val2) {
        return (val2 !== null && val2 !== void 0 ? val2 : "").toString().split("").reduce((hash2, ch) => {
          hash2 = (hash2 << 5) - hash2 + ch.charCodeAt(0);
          return hash2 & hash2;
        }, 0);
      }
      if (typeof val === "string") {
        return stringHash(val);
      } else if (typeof val === "number") {
        return numberHash(val);
      } else if (typeof val === "boolean") {
        return booleanHash(val);
      } else if (val === null) {
        return nullHash();
      } else if (val === void 0) {
        return undefinedHash();
      } else if (Array.isArray(val)) {
        return arrayHash(val);
      } else if (typeof val === "object") {
        return objectHash(val);
      } else {
        return defaultHash(val);
      }
    }
    exports.hash = hash;
  }
});

// node_modules/tdv-core/dist/src/utils/decorator.utils.js
var require_decorator_utils = __commonJS({
  "node_modules/tdv-core/dist/src/utils/decorator.utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.evaluateNullableValidity = exports.isValidationGroupUnion = exports.extractGroups = exports.extractMessage = void 0;
    var object_utils_1 = require_object_utils();
    function extractMessage(provider, defaultMessage) {
      if (!provider) {
        return defaultMessage;
      }
      const nullableMessage = typeof provider === "string" ? provider : provider.message;
      return !!(nullableMessage === null || nullableMessage === void 0 ? void 0 : nullableMessage.length) ? nullableMessage : defaultMessage;
    }
    exports.extractMessage = extractMessage;
    function extractGroups(provider) {
      return Array.isArray(provider) ? provider : typeof provider === "object" ? Array.isArray(provider.groups) ? provider.groups : provider.groups ? [provider.groups] : [] : [];
    }
    exports.extractGroups = extractGroups;
    function isValidationGroupUnion(classGroups, validatorGroups) {
      return classGroups.length ? validatorGroups.some((o) => classGroups.includes(o)) : !validatorGroups.length;
    }
    exports.isValidationGroupUnion = isValidationGroupUnion;
    function evaluateNullableValidity(object, isValid) {
      return !(0, object_utils_1.hasValue)(object) ? true : isValid(object);
    }
    exports.evaluateNullableValidity = evaluateNullableValidity;
  }
});

// node_modules/tdv-core/dist/src/model/metadata/PropertyMetadata.js
var require_PropertyMetadata = __commonJS({
  "node_modules/tdv-core/dist/src/model/metadata/PropertyMetadata.js"(exports) {
    "use strict";
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    };
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f) {
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    var _PropertyMetadata_runtimeValue;
    Object.defineProperty(exports, "__esModule", { value: true });
    var MetadataProcessor_1 = __importDefault(require_MetadataProcessor());
    var PropertyMetadata = class {
      get parent() {
        return this._owner;
      }
      get name() {
        return this._name;
      }
      get clazz() {
        return this._clazz;
      }
      get type() {
        return this._type;
      }
      constructor(clazz, field, runtimeValue) {
        _PropertyMetadata_runtimeValue.set(this, void 0);
        __classPrivateFieldSet(this, _PropertyMetadata_runtimeValue, runtimeValue, "f");
        this._owner = clazz;
        this._name = field;
        this._clazz = this.buildClass();
        this._type = this.buildTypeGroup();
      }
      buildTypeGroup() {
        const p = MetadataProcessor_1.default.fromClass(this._owner);
        const vp = p.getValidationProcessor(this._name);
        if (!vp.isInitialTypeGroup) {
          return vp.typeGroup;
        }
        const value = __classPrivateFieldGet(this, _PropertyMetadata_runtimeValue, "f");
        return Array.isArray(value) ? vp.constructorCreator ? "OBJECT_ARRAY" : "PRIMITIVE_ARRAY" : vp.constructorCreator ? "OBJECT" : "PRIMITIVE";
      }
      buildClass() {
        var _a, _b, _c;
        return (_c = (_b = (_a = MetadataProcessor_1.default.fromClass(this._owner).getValidationProcessor(this._name)).constructorCreator) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : null;
      }
    };
    _PropertyMetadata_runtimeValue = /* @__PURE__ */ new WeakMap();
    exports.default = PropertyMetadata;
  }
});

// node_modules/tdv-core/dist/src/model/metadata/ClassMetadata.js
var require_ClassMetadata = __commonJS({
  "node_modules/tdv-core/dist/src/model/metadata/ClassMetadata.js"(exports) {
    "use strict";
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    };
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f) {
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    var _ClassMetadata_runtimeValue;
    Object.defineProperty(exports, "__esModule", { value: true });
    var class_utils_1 = require_class_utils();
    var decorator_utils_1 = require_decorator_utils();
    var object_utils_1 = require_object_utils();
    var MetadataProcessor_1 = __importDefault(require_MetadataProcessor());
    var PropertyMetadata_1 = __importDefault(require_PropertyMetadata());
    var ClassMetadata = class _ClassMetadata {
      constructor(clazz, runtimeValue, ...validationGroups) {
        _ClassMetadata_runtimeValue.set(this, void 0);
        __classPrivateFieldSet(this, _ClassMetadata_runtimeValue, runtimeValue, "f");
        this._clazz = clazz;
        this._validationGroups = validationGroups;
        this._fieldNames = this.buildFieldNames();
        this._validators = this.buildValidators();
      }
      get clazz() {
        return this._clazz;
      }
      get validators() {
        return this._validators;
      }
      createInstance(state) {
        const instance = new this._clazz();
        const entries = Object.entries(state || {});
        const handleObject = (meta, key, value) => {
          const innerValidationHandler = new _ClassMetadata(meta.clazz, instance === null || instance === void 0 ? void 0 : instance[key], ...this._validationGroups);
          (0, object_utils_1.safeSetter)(instance, key)(() => innerValidationHandler.createInstance(value));
        };
        const handleObjectArray = (meta, key, value) => {
          (0, object_utils_1.safeSetter)(instance, key)([]);
          const innerValidationHandler = new _ClassMetadata(meta.clazz, instance === null || instance === void 0 ? void 0 : instance[key], ...this._validationGroups);
          value.forEach((v) => {
            instance[key].push(innerValidationHandler.createInstance(v));
          });
        };
        for (const [key, value] of entries) {
          const meta = new PropertyMetadata_1.default(this._clazz, key, value);
          switch (meta.type) {
            case "OBJECT": {
              handleObject(meta, key, value);
              break;
            }
            case "OBJECT_ARRAY": {
              handleObjectArray(meta, key, value);
              break;
            }
            default: {
              (0, object_utils_1.safeSetter)(instance, key)(value);
            }
          }
        }
        return instance;
      }
      buildValidators() {
        return this._fieldNames.reduce((obj, property) => {
          var _a, _b;
          const fieldMetadata = new PropertyMetadata_1.default(this._clazz, property, (_a = __classPrivateFieldGet(this, _ClassMetadata_runtimeValue, "f")) === null || _a === void 0 ? void 0 : _a[property]);
          const innerClass = fieldMetadata.clazz;
          const validationFnMetadata = this.getValidationMetadata(property);
          const validationMetadataListByActiveGroup = validationFnMetadata.filter((meta) => (0, decorator_utils_1.isValidationGroupUnion)(this._validationGroups, meta.groups));
          return Object.assign(Object.assign({}, obj), { [property]: ["OBJECT_ARRAY", "OBJECT"].includes(fieldMetadata.type) ? {
            node: validationMetadataListByActiveGroup,
            children: new _ClassMetadata(innerClass, (_b = __classPrivateFieldGet(this, _ClassMetadata_runtimeValue, "f")) === null || _b === void 0 ? void 0 : _b[property], ...this._validationGroups).buildValidators()
          } : validationMetadataListByActiveGroup });
        }, {});
      }
      getValidationMetadata(property) {
        return MetadataProcessor_1.default.fromClass(this._clazz).getValidationProcessor(property).node;
      }
      buildFieldNames() {
        return (0, class_utils_1.getClassFieldNames)(this._clazz);
      }
    };
    _ClassMetadata_runtimeValue = /* @__PURE__ */ new WeakMap();
    exports.default = ClassMetadata;
  }
});

// node_modules/tdv-core/dist/src/model/processor/EntityProcessor.js
var require_EntityProcessor = __commonJS({
  "node_modules/tdv-core/dist/src/model/processor/EntityProcessor.js"(exports) {
    "use strict";
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f) {
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    var _a;
    var _b;
    var _EntityProcessor_instances;
    var _EntityProcessor_clazz;
    var _EntityProcessor_groups;
    var _EntityProcessor_metadata;
    var _EntityProcessor_cache;
    var _EntityProcessor_fields;
    var _EntityProcessor_noArgsInstance;
    var _EntityProcessor_setMetadata;
    var _EntityProcessor_saveCache;
    var _EntityProcessor_extractInvalidResults;
    var _EntityProcessor_mutateValueOrUseCache;
    var _EntityProcessor_mutateErrors;
    var _EntityProcessor_fromCache;
    var _EntityProcessor_tryGetCache;
    var _EntityProcessor_isValid;
    Object.defineProperty(exports, "__esModule", { value: true });
    var class_utils_1 = require_class_utils();
    var decorator_utils_1 = require_decorator_utils();
    var object_utils_1 = require_object_utils();
    var ClassMetadata_1 = __importDefault(require_ClassMetadata());
    var PropertyMetadata_1 = __importDefault(require_PropertyMetadata());
    var MetadataProcessor_1 = __importDefault(require_MetadataProcessor());
    (_a = (_b = Symbol).metadata) !== null && _a !== void 0 ? _a : _b.metadata = Symbol("Symbol.metadata");
    var EntityProcessor = class _EntityProcessor {
      get metadata() {
        return __classPrivateFieldGet(this, _EntityProcessor_metadata, "f");
      }
      get cache() {
        return __classPrivateFieldGet(this, _EntityProcessor_cache, "f");
      }
      get groups() {
        return __classPrivateFieldGet(this, _EntityProcessor_groups, "f");
      }
      get clazz() {
        return __classPrivateFieldGet(this, _EntityProcessor_clazz, "f");
      }
      get fields() {
        return __classPrivateFieldGet(this, _EntityProcessor_fields, "f");
      }
      get noArgsInstance() {
        return __classPrivateFieldGet(this, _EntityProcessor_noArgsInstance, "f");
      }
      constructor(clazz, ...groups) {
        _EntityProcessor_instances.add(this);
        _EntityProcessor_clazz.set(this, void 0);
        _EntityProcessor_groups.set(this, void 0);
        _EntityProcessor_metadata.set(this, void 0);
        _EntityProcessor_cache.set(this, void 0);
        _EntityProcessor_fields.set(this, void 0);
        _EntityProcessor_noArgsInstance.set(this, void 0);
        __classPrivateFieldSet(this, _EntityProcessor_clazz, clazz, "f");
        __classPrivateFieldSet(this, _EntityProcessor_groups, Array.from(new Set(groups)), "f");
        __classPrivateFieldSet(this, _EntityProcessor_cache, {}, "f");
        __classPrivateFieldSet(this, _EntityProcessor_fields, (0, class_utils_1.getClassFieldNames)(clazz), "f");
        __classPrivateFieldSet(this, _EntityProcessor_noArgsInstance, new clazz(), "f");
        __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_setMetadata).call(this, __classPrivateFieldGet(this, _EntityProcessor_noArgsInstance, "f"));
      }
      isValid(state) {
        return __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_fromCache).call(this, state, "valid");
      }
      getDetailedErrors(state) {
        return __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_fromCache).call(this, state, "detailedErrors");
      }
      getErrors(state) {
        return __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_fromCache).call(this, state, "errors");
      }
      //@stopwatch
      validate(payload) {
        let errors = {};
        let detailedErrors = {};
        const state = payload !== null && payload !== void 0 ? payload : __classPrivateFieldGet(this, _EntityProcessor_noArgsInstance, "f");
        const instance = __classPrivateFieldGet(this, _EntityProcessor_metadata, "f").createInstance(state);
        const entries = Object.entries(__classPrivateFieldGet(this, _EntityProcessor_metadata, "f").validators);
        const collectErrorData = (key, parentData, newSimpleErrorsValue, childData) => {
          if (Array.isArray(childData)) {
            const data = { node: parentData, children: childData };
            __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_mutateErrors).call(this, key, detailedErrors, data, errors, newSimpleErrorsValue);
          } else {
            __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_mutateErrors).call(this, key, detailedErrors, parentData, errors, newSimpleErrorsValue);
          }
        };
        const handlePrimitive = (key, _, validators) => {
          const primitiveErrors = __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_extractInvalidResults).call(this, validators, instance[key], instance);
          collectErrorData(key, primitiveErrors, primitiveErrors.map((e) => e.message));
        };
        const handlePrimitiveArray = (key) => {
          const stateValueArray = state[key];
          const prop = MetadataProcessor_1.default.fromClass(__classPrivateFieldGet(this, _EntityProcessor_clazz, "f")).getValidationProcessor(key);
          const primitiveArrayValidators = prop.node;
          const parentValidators = __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_extractInvalidResults).call(this, prop.node, stateValueArray, state);
          const childrenValidators = (stateValueArray !== null && stateValueArray !== void 0 ? stateValueArray : []).map((v) => __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_extractInvalidResults).call(this, primitiveArrayValidators, v, state));
          collectErrorData(key, parentValidators, {
            node: parentValidators.map((e) => e.message),
            children: childrenValidators.map((e) => e.map(({ message }) => message))
          }, childrenValidators);
        };
        const handleObject = (key, meta) => {
          const innerValidationHandler = new _EntityProcessor(meta.clazz, ...__classPrivateFieldGet(this, _EntityProcessor_groups, "f"));
          const { detailedErrors: detailedErrors2, errors: errors2 } = innerValidationHandler.validate(state[key]);
          collectErrorData(key, detailedErrors2, errors2);
        };
        const handleObjectArray = (key, meta, validators) => {
          var _a2;
          const innerValidationHandler = new _EntityProcessor(meta.clazz, ...__classPrivateFieldGet(this, _EntityProcessor_groups, "f"));
          const stateValueArray = (_a2 = state === null || state === void 0 ? void 0 : state[key]) !== null && _a2 !== void 0 ? _a2 : [];
          const parentValidators = __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_extractInvalidResults).call(this, validators.node, stateValueArray, state);
          const childrenValidators = stateValueArray.map((value) => innerValidationHandler.validate(value));
          collectErrorData(key, parentValidators, {
            node: parentValidators.map((e) => e.message),
            children: childrenValidators.map(({ errors: errors2 }) => errors2)
          }, childrenValidators);
        };
        for (const [_key, _validators] of entries) {
          const validators = _validators;
          const key = _key;
          const meta = new PropertyMetadata_1.default(__classPrivateFieldGet(this, _EntityProcessor_clazz, "f"), key, state[key]);
          switch (meta.type) {
            case "OBJECT": {
              handleObject(key, meta, validators);
              break;
            }
            case "OBJECT_ARRAY": {
              handleObjectArray(key, meta, validators);
              break;
            }
            case "PRIMITIVE_ARRAY": {
              handlePrimitiveArray(key, meta, validators);
              break;
            }
            case "PRIMITIVE": {
              handlePrimitive(key, meta, validators);
              break;
            }
          }
        }
        const valid = __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_isValid).call(this, errors);
        __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_saveCache).call(this, {
          detailedErrors,
          errors,
          valid,
          state
        });
        return {
          valid,
          detailedErrors,
          errors
        };
      }
    };
    _EntityProcessor_clazz = /* @__PURE__ */ new WeakMap(), _EntityProcessor_groups = /* @__PURE__ */ new WeakMap(), _EntityProcessor_metadata = /* @__PURE__ */ new WeakMap(), _EntityProcessor_cache = /* @__PURE__ */ new WeakMap(), _EntityProcessor_fields = /* @__PURE__ */ new WeakMap(), _EntityProcessor_noArgsInstance = /* @__PURE__ */ new WeakMap(), _EntityProcessor_instances = /* @__PURE__ */ new WeakSet(), _EntityProcessor_setMetadata = function _EntityProcessor_setMetadata2(state) {
      __classPrivateFieldSet(this, _EntityProcessor_metadata, new ClassMetadata_1.default(__classPrivateFieldGet(this, _EntityProcessor_clazz, "f"), state, ...__classPrivateFieldGet(this, _EntityProcessor_groups, "f")), "f");
    }, _EntityProcessor_saveCache = function _EntityProcessor_saveCache2(cache) {
      Object.entries(cache).forEach(([key, value]) => __classPrivateFieldGet(this, _EntityProcessor_cache, "f")[key] = value);
    }, _EntityProcessor_extractInvalidResults = function _EntityProcessor_extractInvalidResults2(validators, value, parentInstance) {
      return validators.filter(({ groups }) => (0, decorator_utils_1.isValidationGroupUnion)(__classPrivateFieldGet(this, _EntityProcessor_groups, "f"), groups)).map(({ validate }) => validate(value, parentInstance)).filter(({ valid }) => !valid);
    }, _EntityProcessor_mutateValueOrUseCache = function _EntityProcessor_mutateValueOrUseCache2(key, mutationParent, mutationValue, cacheParent) {
      const cacheValue = cacheParent === null || cacheParent === void 0 ? void 0 : cacheParent[key];
      const isNoChange = (0, object_utils_1.deepEquals)(mutationValue, cacheValue);
      mutationParent[key] = isNoChange ? cacheValue : mutationValue;
    }, _EntityProcessor_mutateErrors = function _EntityProcessor_mutateErrors2(key, errorsHolder, errorsValue, simpleErrorsHolder, simpleErrorsValue) {
      __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_mutateValueOrUseCache).call(this, key, errorsHolder, errorsValue, __classPrivateFieldGet(this, _EntityProcessor_cache, "f").detailedErrors);
      __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_mutateValueOrUseCache).call(this, key, simpleErrorsHolder, simpleErrorsValue, __classPrivateFieldGet(this, _EntityProcessor_cache, "f").errors);
    }, _EntityProcessor_fromCache = function _EntityProcessor_fromCache2(state, key) {
      return __classPrivateFieldGet(this, _EntityProcessor_instances, "m", _EntityProcessor_tryGetCache).call(this, state, __classPrivateFieldGet(this, _EntityProcessor_cache, "f")[key], () => this.validate(state)[key]);
    }, _EntityProcessor_tryGetCache = function _EntityProcessor_tryGetCache2(state, cacheValue, valueGetter) {
      return cacheValue === void 0 || !(0, object_utils_1.deepEquals)(__classPrivateFieldGet(this, _EntityProcessor_cache, "f").state, state) ? valueGetter() : cacheValue;
    }, _EntityProcessor_isValid = function _EntityProcessor_isValid2(errors) {
      return !(0, object_utils_1.hasErrors)(errors);
    };
    exports.default = EntityProcessor;
  }
});

// node_modules/tdv-core/dist/src/utils/string.utils.js
var require_string_utils = __commonJS({
  "node_modules/tdv-core/dist/src/utils/string.utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sprintf = void 0;
    function sprintf(str, ...args) {
      return str.replace(/{(\d+)}/g, function(match, number) {
        return typeof args[number] != "undefined" ? args[number] : match;
      });
    }
    exports.sprintf = sprintf;
  }
});

// node_modules/tdv-core/dist/src/messages/translations/en.json
var require_en = __commonJS({
  "node_modules/tdv-core/dist/src/messages/translations/en.json"(exports, module) {
    module.exports = {
      Alpha: "Given string must only contain alphabetical characters",
      Alphanumeric: "Given string must only contain alphabetical or numeric characters",
      ArrayContains: "Array must contain the following element: {0}",
      ArrayEmpty: "Array must be empty.",
      ArraySizeExact: "Array must contain exactly {0} elements but contains {1}.",
      ArraySizeMax: "Array must contain maximally {0} elements but contains {1}.",
      ArraySizeMin: "Array must contain minimally {0} elements but contains {1}.",
      ArraySizeRange: "Array must contain between {0} and {1} elements but contains {2}.",
      ArrayUnique: "Array elements must be unique",
      Date: "Given string does not comply the desired date format ({0})",
      Decimal: "Value must be a decimal number but is {0}",
      Digits: "Integer part of the number can have a maximum of {0} digits and fraction part a maximum of {1}",
      Email: "Value is not a valid email",
      ExactLength: "Value must contain exactly {0} characters",
      Falsy: "Value must be falsy",
      FutureDate: "Date {0} must be a date in the future",
      IPAddress: "Given string is not a valid IP address",
      Integer: "Value must be an integer but is {0}",
      InvalidDigits: "maxInteger [{0}] and maxFraction [{1}] must be whole numbers",
      JSON: "Given string is not a valid JSON",
      MaxLength: "Field cannot contain more than {0} characters",
      MinLength: "Field must contain at least {0} characters",
      Negative: "Value must be a negative number but is {0}",
      NonNegative: "Value must be more than or equal to 0 but is {0}",
      NonPositive: "Value must be less than or equal to 0 but is {0}",
      Numeric: "Given string must only contain numbers",
      PasswordLength: "Password must be at least {0} characters long",
      PasswordLowercase: "Password must contain at least 1 lowercase letter",
      PasswordNumbers: "Password must contain at least 1 number",
      PasswordSpecials: "Password must contain at least 1 special character",
      PasswordUppercase: "Password must contain at least 1 uppercase letter",
      PastDate: "Date {0} must be a date in the past",
      Positive: "Value must be a positive number but is {0}",
      RangeLength: "Value must contain between {0} and {1} characters",
      Required: "Field is mandatory",
      Time: "Given string does not comply {0} locale for {1} time",
      TodayDate: "Date {0} must be today's date (current)",
      Truthy: "Value must be truthy",
      URL: "The URL you entered is not a valid one",
      ValueMax: "Maximum allowed value is {0} but is {1}",
      ValueMin: "Minimum allowed value is {0} but is {1}",
      ValueRange: "Value must be greater than or equal to {0} and less than or equal to {1} but is {2}",
      XML: "Given string is not a valid XML",
      Uppercase: "Given string must contain only uppercase characters",
      Lowercase: "Given string must contain only lowercase characters"
    };
  }
});

// node_modules/tdv-core/dist/src/messages/translations/hr.json
var require_hr = __commonJS({
  "node_modules/tdv-core/dist/src/messages/translations/hr.json"(exports, module) {
    module.exports = {
      Alpha: "Unos smije sadržavati samo slova",
      Alphanumeric: "Unos smije sadržavati samo slova i brojeve",
      ArrayContains: "Lista mora sadržavati sljedeći element: {0}",
      ArrayEmpty: "Lista mora biti prazna.",
      ArraySizeExact: "Lista mora sadržavati točno {0} elemenata ali sadržava {1}.",
      ArraySizeMax: "Lista mora sadržavati maksimalno {0} elemenata ali sadržava {1}.",
      ArraySizeMin: "Lista mora sadržavati minimalno {0} elemenata ali sadržava {1}.",
      ArraySizeRange: "Lista mora sadržavati između {0} i {1} elemenata ali sadržava {2}.",
      ArrayUnique: "Elementi liste moraju biti jedinstveni",
      Date: "Unos ne zadovoljava format datuma ({0})",
      Decimal: "Broj mora biti decimalan ali je {0}",
      Digits: "Integer part of the number can have a maximum of {0} digits and fraction part a maximum of {1}",
      Email: "Unos nije pravilni email",
      ExactLength: "Unos mora sadržavati točno {0} znakova",
      Falsy: "Vrijednost mora biti negativna",
      FutureDate: "Datum {0} mora biti datum u budućnosti",
      IPAddress: "Unos nije validna IP adresa",
      Integer: "Vrijednost mora biti cijeli broj ali je {0}",
      InvalidDigits: "maxInteger [{0}] i maxFraction [{1}] moraju biti cijeli brojevi",
      JSON: "Unos nije validni JSON",
      MaxLength: "Unos ne smije sadržavati više od {0} znakova",
      MinLength: "Unos mora sadržavati barem {0} znakova",
      Negative: "Vrijednost mora biti negativan broj ali je {0}",
      NonNegative: "Vrijednost smije biti 0 ili veće ali je {0}",
      NonPositive: "Vrijednost smije biti 0 ili manja ali je {0}",
      Numeric: "Unos smije sadržavati samo brojeve",
      PasswordLength: "Lozinka mora imati minimalno {0} znakova",
      PasswordLowercase: "Lozinka mora sadržavati barem 1 malo slovo",
      PasswordNumbers: "Lozinka mora sadržavati barem 1 broj",
      PasswordSpecials: "Lozinka mora sadržavati barem 1 poseban znak",
      PasswordUppercase: "Lozinka mora sadržavati barem 1 veliko slovo",
      PastDate: "Datum {0} mora biti datum u prošlosti",
      Positive: "Vrijednost mora biti pozitivan broj ali je {0}",
      RangeLength: "Unos mora sadržavati između {0} i {1} znakova",
      Required: "Unos je obavezan",
      Time: "Unos ne zadovoljava {0} lokalitet za {1} vrijeme",
      TodayDate: "Datum {0} mora biti današnji datum",
      Truthy: "Vrijednost mora biti pozitivna",
      URL: "Unos nije validan URL",
      ValueMax: "Maksimalna dozvoljena vrijednost je {0} ali je {1}",
      ValueMin: "Minimalna dozvoljena vrijednost je {0} ali je {1}",
      ValueRange: "Vrijednost mora biti veća od ili jednaka {0} i manja od ili jednaka {1} ali je {2}",
      XML: "Unos nije validni XML",
      Uppercase: "Unos smije sadržavati samo velika slova",
      Lowercase: "Unos smije sadržavati samo mala slova"
    };
  }
});

// node_modules/tdv-core/dist/src/messages/model/Translations.js
var require_Translations = __commonJS({
  "node_modules/tdv-core/dist/src/messages/model/Translations.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var MessageFormatEn = __importStar(require_en());
    var MessageFormatHr = __importStar(require_hr());
    var translations = {
      en: MessageFormatEn,
      hr: MessageFormatHr
    };
    exports.default = translations;
  }
});

// node_modules/tdv-core/dist/src/messages/message.factory.js
var require_message_factory = __commonJS({
  "node_modules/tdv-core/dist/src/messages/message.factory.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.t = void 0;
    var string_utils_1 = require_string_utils();
    var Locale_1 = require_Locale();
    var Translations_1 = __importDefault(require_Translations());
    function t(key, ...args) {
      const locale = (0, Locale_1.getLocale)();
      const service = Translations_1.default[locale];
      return (0, string_utils_1.sprintf)(service[key], ...args);
    }
    exports.t = t;
  }
});

// node_modules/tdv-core/dist/src/messages/impl/ErrorMessage.js
var require_ErrorMessage = __commonJS({
  "node_modules/tdv-core/dist/src/messages/impl/ErrorMessage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var message_factory_1 = require_message_factory();
    var ErrorMessage = {
      Alpha: () => (0, message_factory_1.t)("Alpha"),
      Alphanumeric: () => (0, message_factory_1.t)("Alphanumeric"),
      ArrayContains: (o) => (0, message_factory_1.t)("ArrayContains", JSON.stringify(o, null, 2)),
      ArrayEmpty: () => (0, message_factory_1.t)("ArrayEmpty"),
      ArraySizeExact: (exact, actual) => (0, message_factory_1.t)("ArraySizeExact", exact, actual),
      ArraySizeMax: (max, actual) => (0, message_factory_1.t)("ArraySizeMax", max, actual),
      ArraySizeMin: (min, actual) => (0, message_factory_1.t)("ArraySizeMin", min, actual),
      ArraySizeRange: (min, max, actual) => (0, message_factory_1.t)("ArraySizeRange", min, max, actual),
      ArrayUnique: () => (0, message_factory_1.t)("ArrayUnique"),
      Date: (format) => (0, message_factory_1.t)("Date", format),
      Decimal: (actual) => (0, message_factory_1.t)("Decimal", actual),
      Digits: (maxInteger, maxFraction) => (0, message_factory_1.t)("Digits", maxInteger, maxFraction),
      Email: () => (0, message_factory_1.t)("Email"),
      ExactLength: (exact) => (0, message_factory_1.t)("ExactLength", exact),
      Falsy: () => (0, message_factory_1.t)("Falsy"),
      FutureDate: (date) => (0, message_factory_1.t)("FutureDate", date === null || date === void 0 ? void 0 : date.toDateString()),
      IPAddress: () => (0, message_factory_1.t)("IPAddress"),
      Integer: (actual) => (0, message_factory_1.t)("Integer", actual),
      InvalidDigits: (maxInteger, maxFraction) => (0, message_factory_1.t)("InvalidDigits", maxInteger, maxFraction),
      JSON: () => (0, message_factory_1.t)("JSON"),
      MaxLength: (max) => (0, message_factory_1.t)("MaxLength", max),
      MinLength: (min) => (0, message_factory_1.t)("MinLength", min),
      Negative: (actual) => (0, message_factory_1.t)("Negative", actual),
      NonNegative: (actual) => (0, message_factory_1.t)("NonNegative", actual),
      NonPositive: (actual) => (0, message_factory_1.t)("NonPositive", actual),
      Numeric: () => (0, message_factory_1.t)("Numeric"),
      PasswordLength: (length) => (0, message_factory_1.t)("PasswordLength", length),
      PasswordLowercase: () => (0, message_factory_1.t)("PasswordLowercase"),
      PasswordNumbers: () => (0, message_factory_1.t)("PasswordNumbers"),
      PasswordSpecials: () => (0, message_factory_1.t)("PasswordSpecials"),
      PasswordUppercase: () => (0, message_factory_1.t)("PasswordUppercase"),
      PastDate: (date) => (0, message_factory_1.t)("PastDate", date === null || date === void 0 ? void 0 : date.toDateString()),
      Positive: (actual) => (0, message_factory_1.t)("Positive", actual),
      RangeLength: (min, max) => (0, message_factory_1.t)("RangeLength", min, max),
      Required: () => (0, message_factory_1.t)("Required"),
      Time: (locale, hour12) => (0, message_factory_1.t)("Time", locale, hour12 ? "12-hour" : "24:hour"),
      TodayDate: (date) => (0, message_factory_1.t)("TodayDate", date === null || date === void 0 ? void 0 : date.toDateString()),
      Truthy: () => (0, message_factory_1.t)("Truthy"),
      URL: () => (0, message_factory_1.t)("URL"),
      ValueMax: (value, actual) => (0, message_factory_1.t)("ValueMax", value, actual),
      ValueMin: (value, actual) => (0, message_factory_1.t)("ValueMin", value, actual),
      ValueRange: (min, max, actual) => (0, message_factory_1.t)("ValueRange", min, max, actual),
      XML: () => (0, message_factory_1.t)("XML"),
      Uppercase: () => (0, message_factory_1.t)("Uppercase"),
      Lowercase: () => (0, message_factory_1.t)("Lowercase")
    };
    exports.default = ErrorMessage;
  }
});

// node_modules/tdv-core/dist/validators/number/ValueMax.js
var require_ValueMax = __commonJS({
  "node_modules/tdv-core/dist/validators/number/ValueMax.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ValueMax(props) {
      const max = typeof props === "number" ? props : props.value;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "ValueMax",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ValueMax(max, value)),
          valid: value == null ? true : value <= max
        })
      });
    }
    exports.default = ValueMax;
  }
});

// node_modules/tdv-core/dist/validators/number/ValueRange.js
var require_ValueRange = __commonJS({
  "node_modules/tdv-core/dist/validators/number/ValueRange.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ValueRange(props) {
      const { min, max } = props;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "ValueRange",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ValueRange(min, max, value)),
          valid: value == null ? true : value >= min && value <= max
        })
      });
    }
    exports.default = ValueRange;
  }
});

// node_modules/tdv-core/dist/src/model/constants/regex.constants.js
var require_regex_constants = __commonJS({
  "node_modules/tdv-core/dist/src/model/constants/regex.constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RegexConst = {
      URL: /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/,
      EMAIL: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
      NUMERIC: /^[0-9]+$/,
      ALPHA: /^[a-zA-Z]+$/,
      IP_ADDRESS: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/,
      UPPERCASE: /^[A-Z]+$/,
      LOWERCASE: /^[A-Z]+$/,
      UPPERCASE_ANYWHERE: /[A-Z]/,
      LOWERCASE_ANYWHERE: /[a-z]/,
      SPECIALS_ANYWHERE: /[^a-zA-Z0-9]/,
      NUMERIC_ANYWHERE: /\d/,
      ALPHANUMERIC: /^[a-zA-Z0-9]+$/
    };
    exports.default = RegexConst;
  }
});

// node_modules/tdv-core/dist/validators/string/Password.js
var require_Password = __commonJS({
  "node_modules/tdv-core/dist/validators/string/Password.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    var DEFAULT_PROPS = {
      uppercase: false,
      lowercase: true,
      numbers: false,
      specials: false,
      length: 8
    };
    var PASSWORD_REGEXES = {
      uppercase: regex_constants_1.default.UPPERCASE_ANYWHERE,
      lowercase: regex_constants_1.default.LOWERCASE_ANYWHERE,
      numbers: regex_constants_1.default.NUMERIC_ANYWHERE,
      specials: regex_constants_1.default.SPECIALS_ANYWHERE
    };
    function isInvalid(text, rule) {
      const matchers = text.match(PASSWORD_REGEXES[rule]);
      return matchers === null || matchers.length === 0;
    }
    function Password(cfg = Object.assign(Object.assign({}, DEFAULT_PROPS), { message: void 0 })) {
      var _a, _b, _c, _d, _e;
      const props = typeof cfg === "string" ? Object.assign(Object.assign({}, DEFAULT_PROPS), { message: cfg }) : cfg;
      const uppercase = (_a = props.uppercase) !== null && _a !== void 0 ? _a : DEFAULT_PROPS.uppercase;
      const lowercase = (_b = props.lowercase) !== null && _b !== void 0 ? _b : DEFAULT_PROPS.lowercase;
      const numbers = (_c = props.numbers) !== null && _c !== void 0 ? _c : DEFAULT_PROPS.numbers;
      const specials = (_d = props.specials) !== null && _d !== void 0 ? _d : DEFAULT_PROPS.specials;
      const length = (_e = props.length) !== null && _e !== void 0 ? _e : DEFAULT_PROPS.length;
      const definedMessage = props.message;
      function buildConstraintViolation(message, valid = false) {
        return {
          key: "Password",
          message: !!definedMessage ? definedMessage : message,
          valid
        };
      }
      function isValid(str) {
        if (str.length < length)
          return buildConstraintViolation(ErrorMessage_1.default.PasswordLength(length));
        if (uppercase && isInvalid(str, "uppercase"))
          return buildConstraintViolation(ErrorMessage_1.default.PasswordUppercase());
        if (lowercase && isInvalid(str, "lowercase"))
          return buildConstraintViolation(ErrorMessage_1.default.PasswordLowercase());
        if (numbers && isInvalid(str, "numbers"))
          return buildConstraintViolation(ErrorMessage_1.default.PasswordNumbers());
        if (specials && isInvalid(str, "specials"))
          return buildConstraintViolation(ErrorMessage_1.default.PasswordSpecials());
        return buildConstraintViolation("", true);
      }
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (str) => isValid(str !== null && str !== void 0 ? str : "")
      });
    }
    exports.default = Password;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/Pattern.js
var require_Pattern = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/Pattern.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var decorator_utils_1 = require_decorator_utils();
    function Pattern(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props.groups),
        isValid: (value) => {
          var _a;
          return {
            key: (_a = props.key) !== null && _a !== void 0 ? _a : "Pattern",
            message: props.message,
            valid: (value !== null && value !== void 0 ? value : "").length === 0 || props.regex.test(value)
          };
        }
      });
    }
    exports.default = Pattern;
  }
});

// node_modules/tdv-core/dist/validators/any/Truthy.js
var require_Truthy = __commonJS({
  "node_modules/tdv-core/dist/validators/any/Truthy.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    var validator_facade_1 = require_validator_facade();
    function Truthy(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "Truthy",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Truthy()),
          valid: !!value
        })
      });
    }
    exports.default = Truthy;
  }
});

// node_modules/tdv-core/dist/validators/any/Falsy.js
var require_Falsy = __commonJS({
  "node_modules/tdv-core/dist/validators/any/Falsy.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    var validator_facade_1 = require_validator_facade();
    function Falsy(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "Falsy",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Falsy()),
          valid: !value
        })
      });
    }
    exports.default = Falsy;
  }
});

// node_modules/tdv-core/dist/validators/number/Decimal.js
var require_Decimal = __commonJS({
  "node_modules/tdv-core/dist/validators/number/Decimal.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function Decimal(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "Decimal",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Decimal(value)),
          valid: value !== void 0 && value !== null && !Number.isInteger(value)
        })
      });
    }
    exports.default = Decimal;
  }
});

// node_modules/tdv-core/dist/validators/number/Integer.js
var require_Integer = __commonJS({
  "node_modules/tdv-core/dist/validators/number/Integer.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function Integer(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (num) => ({
          key: "Integer",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Integer(num)),
          valid: num !== void 0 && num !== null && Number.isInteger(num)
        })
      });
    }
    exports.default = Integer;
  }
});

// node_modules/tdv-core/dist/validators/number/Negative.js
var require_Negative = __commonJS({
  "node_modules/tdv-core/dist/validators/number/Negative.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function Negative(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (num) => ({
          key: "Negative",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Negative(num)),
          valid: num !== void 0 && num !== null && num < 0
        })
      });
    }
    exports.default = Negative;
  }
});

// node_modules/tdv-core/dist/validators/number/NonNegative.js
var require_NonNegative = __commonJS({
  "node_modules/tdv-core/dist/validators/number/NonNegative.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function NonNegative(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (num) => ({
          key: "NonNegative",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.NonNegative(num)),
          valid: num !== void 0 && num !== null && num >= 0
        })
      });
    }
    exports.default = NonNegative;
  }
});

// node_modules/tdv-core/dist/validators/number/NonPositive.js
var require_NonPositive = __commonJS({
  "node_modules/tdv-core/dist/validators/number/NonPositive.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function NonPositive(props) {
      return (0, validator_facade_1.makeValidator)({
        isValid: (num) => ({
          key: "NonPositive",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.NonPositive(num)),
          valid: num !== void 0 && num !== null && num <= 0
        })
      });
    }
    exports.default = NonPositive;
  }
});

// node_modules/tdv-core/dist/validators/number/Positive.js
var require_Positive = __commonJS({
  "node_modules/tdv-core/dist/validators/number/Positive.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function Positive(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (num) => ({
          key: "Positive",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Positive(num)),
          valid: num !== void 0 && num !== null && num > 0
        })
      });
    }
    exports.default = Positive;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/impl/Alpha.js
var require_Alpha = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/impl/Alpha.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var Pattern_1 = __importDefault(require_Pattern());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    function Alpha(props) {
      return (0, Pattern_1.default)({
        key: "Alpha",
        regex: regex_constants_1.default.ALPHA,
        groups: (0, decorator_utils_1.extractGroups)(props),
        message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Alpha())
      });
    }
    exports.default = Alpha;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/impl/Numeric.js
var require_Numeric = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/impl/Numeric.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var Pattern_1 = __importDefault(require_Pattern());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    function Numeric(props) {
      return (0, Pattern_1.default)({
        key: "Numeric",
        regex: regex_constants_1.default.NUMERIC,
        groups: (0, decorator_utils_1.extractGroups)(props),
        message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Numeric())
      });
    }
    exports.default = Numeric;
  }
});

// node_modules/tdv-core/dist/validators/any/Required.js
var require_Required = __commonJS({
  "node_modules/tdv-core/dist/validators/any/Required.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    var object_utils_1 = require_object_utils();
    function Required(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "Required",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Required()),
          valid: (0, object_utils_1.hasValue)(value)
        })
      });
    }
    exports.default = Required;
  }
});

// node_modules/tdv-core/dist/validators/array/ArrayContains.js
var require_ArrayContains = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArrayContains.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var decorator_utils_1 = require_decorator_utils();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    function ArrayContains(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArrayContains",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ArrayContains(props.value)),
          valid: (array !== null && array !== void 0 ? array : []).includes(props.value)
        })
      });
    }
    exports.default = ArrayContains;
  }
});

// node_modules/tdv-core/dist/validators/array/ArrayEmpty.js
var require_ArrayEmpty = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArrayEmpty.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ArrayEmpty(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArrayEmpty",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ArrayEmpty()),
          valid: (array !== null && array !== void 0 ? array : []).length === 0
        })
      });
    }
    exports.default = ArrayEmpty;
  }
});

// node_modules/tdv-core/dist/validators/array/ArrayEvery.js
var require_ArrayEvery = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArrayEvery.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var decorator_utils_1 = require_decorator_utils();
    function ArrayEvery(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArrayEvery",
          message: props.message,
          valid: (array !== null && array !== void 0 ? array : []).every(props.test)
        })
      });
    }
    exports.default = ArrayEvery;
  }
});

// node_modules/tdv-core/dist/src/utils/array.utils.js
var require_array_utils = __commonJS({
  "node_modules/tdv-core/dist/src/utils/array.utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isArrayUnique = void 0;
    function isArrayUnique(arr, equals) {
      const set = /* @__PURE__ */ new Set();
      for (const val of arr) {
        for (const el of set) {
          if (equals(val, el)) {
            return false;
          }
        }
        set.add(val);
      }
      return true;
    }
    exports.isArrayUnique = isArrayUnique;
  }
});

// node_modules/tdv-core/dist/validators/array/ArrayUnique.js
var require_ArrayUnique = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArrayUnique.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var object_utils_1 = require_object_utils();
    var array_utils_1 = require_array_utils();
    var decorator_utils_1 = require_decorator_utils();
    var DEFAULTS = {
      hash: object_utils_1.hash,
      groups: [],
      message: ErrorMessage_1.default.ArrayUnique()
    };
    function ArrayUnique(props = DEFAULTS) {
      var _a;
      const hashFn = typeof props === "string" ? object_utils_1.hash : (_a = props.hash) !== null && _a !== void 0 ? _a : object_utils_1.hash;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArrayUnique",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ArrayUnique()),
          valid: (0, array_utils_1.isArrayUnique)(array !== null && array !== void 0 ? array : [], (obj1, obj2) => hashFn(obj1) === hashFn(obj2))
        })
      });
    }
    exports.default = ArrayUnique;
  }
});

// node_modules/tdv-core/dist/validators/array/ArraySizeExact.js
var require_ArraySizeExact = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArraySizeExact.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ArraySizeExact(props) {
      const exact = typeof props === "number" ? props : props.value;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArraySizeExact",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ArraySizeExact(exact, (array !== null && array !== void 0 ? array : []).length)),
          valid: (array !== null && array !== void 0 ? array : []).length === exact
        })
      });
    }
    exports.default = ArraySizeExact;
  }
});

// node_modules/tdv-core/dist/validators/array/foreach.js
var require_foreach = __commonJS({
  "node_modules/tdv-core/dist/validators/array/foreach.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var decorator_factory_1 = require_decorator_factory();
    function foreach(...validators) {
      return (0, decorator_factory_1.makeDecorator)((property, processor, context) => {
        validators.forEach((validator) => {
          validator(void 0, context);
          const validationProcessor = processor.getValidationProcessor(property);
          const validationMetadata = validationProcessor.node.pop();
          validationProcessor.appendChild(validationMetadata);
        });
      });
    }
    exports.default = foreach;
  }
});

// node_modules/tdv-core/dist/validators/array/ArraySizeMax.js
var require_ArraySizeMax = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArraySizeMax.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ArraySizeMax(props) {
      const max = typeof props === "number" ? props : props.value;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArraySizeMax",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ArraySizeMax(max, (array !== null && array !== void 0 ? array : []).length)),
          valid: (array !== null && array !== void 0 ? array : []).length <= max
        })
      });
    }
    exports.default = ArraySizeMax;
  }
});

// node_modules/tdv-core/dist/validators/array/ArraySizeMin.js
var require_ArraySizeMin = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArraySizeMin.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ArraySizeMin(props) {
      const min = typeof props === "number" ? props : props.value;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArraySizeMin",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ArraySizeMin(min, (array !== null && array !== void 0 ? array : []).length)),
          valid: (array !== null && array !== void 0 ? array : []).length >= min
        })
      });
    }
    exports.default = ArraySizeMin;
  }
});

// node_modules/tdv-core/dist/validators/array/ArraySizeRange.js
var require_ArraySizeRange = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArraySizeRange.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ArraySizeRange(props) {
      const min = typeof props === "number" ? props : props.min;
      const max = typeof props === "number" ? props : props.max;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArraySizeRange",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ArraySizeRange(min, max, (array !== null && array !== void 0 ? array : []).length)),
          valid: (array !== null && array !== void 0 ? array : []).length >= min && (array !== null && array !== void 0 ? array : []).length <= max
        })
      });
    }
    exports.default = ArraySizeRange;
  }
});

// node_modules/tdv-core/dist/validators/array/ArrayNone.js
var require_ArrayNone = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArrayNone.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var decorator_utils_1 = require_decorator_utils();
    function ArrayNone(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArrayNone",
          message: props.message,
          valid: !(array !== null && array !== void 0 ? array : []).some(props.test)
        })
      });
    }
    exports.default = ArrayNone;
  }
});

// node_modules/tdv-core/dist/validators/array/ArrayOne.js
var require_ArrayOne = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArrayOne.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var decorator_utils_1 = require_decorator_utils();
    function ArrayOne(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArrayOne",
          message: props.message,
          valid: (array !== null && array !== void 0 ? array : []).filter(props.test).length === 1
        })
      });
    }
    exports.default = ArrayOne;
  }
});

// node_modules/tdv-core/dist/validators/array/ArraySome.js
var require_ArraySome = __commonJS({
  "node_modules/tdv-core/dist/validators/array/ArraySome.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var decorator_utils_1 = require_decorator_utils();
    function ArraySome(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (array) => ({
          key: "ArraySome",
          message: props.message,
          valid: (array !== null && array !== void 0 ? array : []).some(props.test)
        })
      });
    }
    exports.default = ArraySome;
  }
});

// node_modules/tdv-core/dist/validators/number/ValueMin.js
var require_ValueMin = __commonJS({
  "node_modules/tdv-core/dist/validators/number/ValueMin.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ValueMin(props) {
      const min = typeof props === "number" ? props : props.value;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "ValueMin",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ValueMin(min, value)),
          valid: value == null ? true : value >= min
        })
      });
    }
    exports.default = ValueMin;
  }
});

// node_modules/tdv-core/dist/validators/string/ExactLength.js
var require_ExactLength = __commonJS({
  "node_modules/tdv-core/dist/validators/string/ExactLength.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function ExactLength(props) {
      const exact = typeof props === "number" ? props : props.value;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "ExactLength",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.ExactLength(exact)),
          valid: (value !== null && value !== void 0 ? value : "").length === exact
        })
      });
    }
    exports.default = ExactLength;
  }
});

// node_modules/tdv-core/dist/validators/string/Length.js
var require_Length = __commonJS({
  "node_modules/tdv-core/dist/validators/string/Length.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function Length(props) {
      const { min, max } = props;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "Length",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.RangeLength(min, max)),
          valid: (value !== null && value !== void 0 ? value : "").length >= min && (value !== null && value !== void 0 ? value : "").length <= max
        })
      });
    }
    exports.default = Length;
  }
});

// node_modules/tdv-core/dist/validators/string/MaxLength.js
var require_MaxLength = __commonJS({
  "node_modules/tdv-core/dist/validators/string/MaxLength.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function MaxLength(props) {
      const max = typeof props === "number" ? props : props.value;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "MaxLength",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.MaxLength(max)),
          valid: (value !== null && value !== void 0 ? value : "").length <= max
        })
      });
    }
    exports.default = MaxLength;
  }
});

// node_modules/tdv-core/dist/validators/string/MinLength.js
var require_MinLength = __commonJS({
  "node_modules/tdv-core/dist/validators/string/MinLength.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function MinLength(props) {
      const min = typeof props === "number" ? props : props.value;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "MinLength",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.MinLength(min)),
          valid: (value !== null && value !== void 0 ? value : "").length >= min
        })
      });
    }
    exports.default = MinLength;
  }
});

// node_modules/tdv-core/dist/validators/date/FutureDate.js
var require_FutureDate = __commonJS({
  "node_modules/tdv-core/dist/validators/date/FutureDate.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function isFutureDate(date) {
      return (0, decorator_utils_1.evaluateNullableValidity)(date, (d) => {
        const currentDate = /* @__PURE__ */ new Date();
        return d.getTime() > currentDate.getTime();
      });
    }
    function FutureDate(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (date) => ({
          key: "FutureDate",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.FutureDate(date)),
          valid: isFutureDate(date)
        })
      });
    }
    exports.default = FutureDate;
  }
});

// node_modules/tdv-core/dist/validators/date/PastDate.js
var require_PastDate = __commonJS({
  "node_modules/tdv-core/dist/validators/date/PastDate.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function isPastDate(date) {
      return (0, decorator_utils_1.evaluateNullableValidity)(date, (d) => {
        const currentDate = /* @__PURE__ */ new Date();
        return d.getTime() < currentDate.getTime();
      });
    }
    function PastDate(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (date) => ({
          key: "PastDate",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.PastDate(date)),
          valid: isPastDate(date)
        })
      });
    }
    exports.default = PastDate;
  }
});

// node_modules/tdv-core/dist/validators/date/TodayDate.js
var require_TodayDate = __commonJS({
  "node_modules/tdv-core/dist/validators/date/TodayDate.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function isTodayDate(date) {
      return (0, decorator_utils_1.evaluateNullableValidity)(date, (d) => {
        const currentDate = /* @__PURE__ */ new Date();
        return d.getDate() === currentDate.getDate() && d.getMonth() === currentDate.getMonth() && d.getFullYear() === currentDate.getFullYear();
      });
    }
    function TodayDate(props) {
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (date) => ({
          key: "TodayDate",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.TodayDate(date)),
          valid: isTodayDate(date)
        })
      });
    }
    exports.default = TodayDate;
  }
});

// node_modules/tdv-core/dist/validators/any/Rule.js
var require_Rule = __commonJS({
  "node_modules/tdv-core/dist/validators/any/Rule.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    function Rule(props) {
      return (0, validator_facade_1.makeValidator)({
        isValid: "isValid" in props ? props.isValid : props,
        groups: "isValid" in props ? props.groups : []
      });
    }
    exports.default = Rule;
  }
});

// node_modules/tdv-core/dist/validators/number/Digits.js
var require_Digits = __commonJS({
  "node_modules/tdv-core/dist/validators/number/Digits.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var validator_facade_1 = require_validator_facade();
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var decorator_utils_1 = require_decorator_utils();
    function validateDigits(number, maxInteger, maxFraction) {
      if (number == null) {
        return true;
      }
      if (maxInteger !== Infinity && maxInteger % 1 !== 0 || maxFraction !== Infinity && maxFraction % 1 !== 0) {
        throw new Error(ErrorMessage_1.default.InvalidDigits(maxInteger, maxFraction));
      }
      const parts = number.toString().split(".");
      const integerPart = parts[0];
      const fractionPart = parts[1] || "";
      return integerPart.length <= maxInteger && fractionPart.length <= maxFraction;
    }
    function Digits(props) {
      const { maxInteger = Infinity, maxFraction = Infinity } = props;
      return (0, validator_facade_1.makeValidator)({
        groups: (0, decorator_utils_1.extractGroups)(props),
        isValid: (value) => ({
          key: "Digits",
          message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Digits(maxInteger, maxFraction)),
          valid: validateDigits(value, maxInteger, maxFraction)
        })
      });
    }
    exports.default = Digits;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/impl/Email.js
var require_Email = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/impl/Email.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var Pattern_1 = __importDefault(require_Pattern());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    function Email(props) {
      return (0, Pattern_1.default)({
        key: "Email",
        groups: (0, decorator_utils_1.extractGroups)(props),
        message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Email()),
        regex: regex_constants_1.default.EMAIL
      });
    }
    exports.default = Email;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/impl/IPAddress.js
var require_IPAddress = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/impl/IPAddress.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var Pattern_1 = __importDefault(require_Pattern());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    function IPAddress(props) {
      return (0, Pattern_1.default)({
        key: "IPAddress",
        groups: (0, decorator_utils_1.extractGroups)(props),
        regex: regex_constants_1.default.IP_ADDRESS,
        message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.IPAddress())
      });
    }
    exports.default = IPAddress;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/impl/URL.js
var require_URL = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/impl/URL.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var Pattern_1 = __importDefault(require_Pattern());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    function URL(props) {
      return (0, Pattern_1.default)({
        key: "URL",
        message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.URL()),
        groups: (0, decorator_utils_1.extractGroups)(props),
        regex: regex_constants_1.default.URL
      });
    }
    exports.default = URL;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/impl/Uppercase.js
var require_Uppercase = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/impl/Uppercase.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var Pattern_1 = __importDefault(require_Pattern());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    function Uppercase(props) {
      return (0, Pattern_1.default)({
        key: "Uppercase",
        regex: regex_constants_1.default.UPPERCASE,
        groups: (0, decorator_utils_1.extractGroups)(props),
        message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Uppercase())
      });
    }
    exports.default = Uppercase;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/impl/Lowercase.js
var require_Lowercase = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/impl/Lowercase.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var Pattern_1 = __importDefault(require_Pattern());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    function Lowercase(props) {
      return (0, Pattern_1.default)({
        key: "Lowercase",
        regex: regex_constants_1.default.LOWERCASE,
        groups: (0, decorator_utils_1.extractGroups)(props),
        message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Lowercase())
      });
    }
    exports.default = Lowercase;
  }
});

// node_modules/tdv-core/dist/validators/string/regex/impl/Alphanumeric.js
var require_Alphanumeric = __commonJS({
  "node_modules/tdv-core/dist/validators/string/regex/impl/Alphanumeric.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ErrorMessage_1 = __importDefault(require_ErrorMessage());
    var Pattern_1 = __importDefault(require_Pattern());
    var decorator_utils_1 = require_decorator_utils();
    var regex_constants_1 = __importDefault(require_regex_constants());
    function Alphanumeric(props) {
      return (0, Pattern_1.default)({
        key: "Alphanumeric",
        regex: regex_constants_1.default.ALPHANUMERIC,
        groups: (0, decorator_utils_1.extractGroups)(props),
        message: (0, decorator_utils_1.extractMessage)(props, ErrorMessage_1.default.Alphanumeric())
      });
    }
    exports.default = Alphanumeric;
  }
});

// node_modules/tdv-core/dist/validators/index.js
var require_validators = __commonJS({
  "node_modules/tdv-core/dist/validators/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ValueMax_1 = __importDefault(require_ValueMax());
    var ValueRange_1 = __importDefault(require_ValueRange());
    var Password_1 = __importDefault(require_Password());
    var Pattern_1 = __importDefault(require_Pattern());
    var Truthy_1 = __importDefault(require_Truthy());
    var Falsy_1 = __importDefault(require_Falsy());
    var Decimal_1 = __importDefault(require_Decimal());
    var Integer_1 = __importDefault(require_Integer());
    var Negative_1 = __importDefault(require_Negative());
    var NonNegative_1 = __importDefault(require_NonNegative());
    var NonPositive_1 = __importDefault(require_NonPositive());
    var Positive_1 = __importDefault(require_Positive());
    var Alpha_1 = __importDefault(require_Alpha());
    var Numeric_1 = __importDefault(require_Numeric());
    var Required_1 = __importDefault(require_Required());
    var ArrayContains_1 = __importDefault(require_ArrayContains());
    var ArrayEmpty_1 = __importDefault(require_ArrayEmpty());
    var ArrayEvery_1 = __importDefault(require_ArrayEvery());
    var ArrayUnique_1 = __importDefault(require_ArrayUnique());
    var ArraySizeExact_1 = __importDefault(require_ArraySizeExact());
    var foreach_1 = __importDefault(require_foreach());
    var ArraySizeMax_1 = __importDefault(require_ArraySizeMax());
    var ArraySizeMin_1 = __importDefault(require_ArraySizeMin());
    var ArraySizeRange_1 = __importDefault(require_ArraySizeRange());
    var ArrayNone_1 = __importDefault(require_ArrayNone());
    var ArrayOne_1 = __importDefault(require_ArrayOne());
    var ArraySome_1 = __importDefault(require_ArraySome());
    var ValueMin_1 = __importDefault(require_ValueMin());
    var ExactLength_1 = __importDefault(require_ExactLength());
    var Length_1 = __importDefault(require_Length());
    var MaxLength_1 = __importDefault(require_MaxLength());
    var MinLength_1 = __importDefault(require_MinLength());
    var FutureDate_1 = __importDefault(require_FutureDate());
    var PastDate_1 = __importDefault(require_PastDate());
    var TodayDate_1 = __importDefault(require_TodayDate());
    var Rule_1 = __importDefault(require_Rule());
    var Digits_1 = __importDefault(require_Digits());
    var Email_1 = __importDefault(require_Email());
    var IPAddress_1 = __importDefault(require_IPAddress());
    var URL_1 = __importDefault(require_URL());
    var Uppercase_1 = __importDefault(require_Uppercase());
    var Lowercase_1 = __importDefault(require_Lowercase());
    var Alphanumeric_1 = __importDefault(require_Alphanumeric());
    var any = {
      Truthy: Truthy_1.default,
      Falsy: Falsy_1.default,
      Required: Required_1.default
    };
    var array = Object.assign(Object.assign({}, any), {
      ArrayContains: ArrayContains_1.default,
      ArrayEmpty: ArrayEmpty_1.default,
      ArrayEvery: ArrayEvery_1.default,
      ArrayNone: ArrayNone_1.default,
      ArrayOne: ArrayOne_1.default,
      ArraySome: ArraySome_1.default,
      ArrayUnique: ArrayUnique_1.default,
      ArraySizeExact: ArraySizeExact_1.default,
      ArraySizeMax: ArraySizeMax_1.default,
      ArraySizeMin: ArraySizeMin_1.default,
      ArraySizeRange: ArraySizeRange_1.default,
      foreach: foreach_1.default
    });
    var boolean = {
      Truthy: Truthy_1.default,
      Falsy: Falsy_1.default
    };
    var number = Object.assign(Object.assign({}, any), {
      Digits: Digits_1.default,
      ValueMax: ValueMax_1.default,
      ValueMin: ValueMin_1.default,
      ValueRange: ValueRange_1.default,
      Decimal: Decimal_1.default,
      Integer: Integer_1.default,
      Negative: Negative_1.default,
      NonNegative: NonNegative_1.default,
      NonPositive: NonPositive_1.default,
      Positive: Positive_1.default
    });
    var date = Object.assign(Object.assign({}, any), {
      FutureDate: FutureDate_1.default,
      PastDate: PastDate_1.default,
      TodayDate: TodayDate_1.default
    });
    var string = Object.assign(Object.assign({}, any), {
      Email: Email_1.default,
      Password: Password_1.default,
      Pattern: Pattern_1.default,
      URL: URL_1.default,
      Alpha: Alpha_1.default,
      IPAddress: IPAddress_1.default,
      Numeric: Numeric_1.default,
      ExactLength: ExactLength_1.default,
      Length: Length_1.default,
      MaxLength: MaxLength_1.default,
      MinLength: MinLength_1.default,
      Uppercase: Uppercase_1.default,
      Lowercase: Lowercase_1.default,
      Alphanumeric: Alphanumeric_1.default
    });
    var validators = {
      any,
      array,
      boolean,
      number,
      string,
      date,
      Rule: Rule_1.default
    };
    exports.default = validators;
  }
});

// node_modules/tdv-core/dist/index.js
var require_dist = __commonJS({
  "node_modules/tdv-core/dist/index.js"(exports) {
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.validators = exports.setLocale = exports.makeValidator = exports.getLocale = exports.Rule = exports.EntityProcessor = void 0;
    var validator_facade_1 = require_validator_facade();
    Object.defineProperty(exports, "makeValidator", { enumerable: true, get: function() {
      return validator_facade_1.makeValidator;
    } });
    var Locale_1 = require_Locale();
    Object.defineProperty(exports, "getLocale", { enumerable: true, get: function() {
      return Locale_1.getLocale;
    } });
    Object.defineProperty(exports, "setLocale", { enumerable: true, get: function() {
      return Locale_1.setLocale;
    } });
    var EntityProcessor_1 = __importDefault(require_EntityProcessor());
    exports.EntityProcessor = EntityProcessor_1.default;
    var validators_1 = __importDefault(require_validators());
    exports.validators = validators_1.default;
    var Rule_1 = __importDefault(require_Rule());
    exports.Rule = Rule_1.default;
  }
});

export {
  require_dist
};
//# sourceMappingURL=chunk-BR2J63QI.js.map
